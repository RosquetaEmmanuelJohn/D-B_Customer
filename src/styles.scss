
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$bloom-pod-web-primary: mat-palette($mat-indigo);
$bloom-pod-web-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$bloom-pod-web-warn: mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$bloom-pod-web-theme: mat-light-theme((
  color: (
    primary: $bloom-pod-web-primary,
    accent: $bloom-pod-web-accent,
    warn: $bloom-pod-web-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($bloom-pod-web-theme);


// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$bloom-pod-web-primary: mat-palette($mat-indigo);
$bloom-pod-web-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$bloom-pod-web-warn: mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$bloom-pod-web-theme: mat-light-theme((
  color: (
    primary: $bloom-pod-web-primary,
    accent: $bloom-pod-web-accent,
    warn: $bloom-pod-web-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($bloom-pod-web-theme);

/* You can add global styles to this file, and also import other style files */

/* Importing Bootstrap SCSS file. */
@import '~bootstrap/scss/bootstrap';

@font-face {
  src: local("Liberal"), url(./assets/fonts/Liberal-Regular.ttf) format("truetype");
  font-family: "Liberal";
}

html, body { height: 100%; }
body { 
  src: local("Liberal"), url(./assets/fonts/Liberal-Regular.ttf) format("truetype");
  margin: 0; 
  font-family: Roboto, "Helvetica Neue", sans-serif, "Liberal";
  background-color: #ffffff;
}
.mat-dialog-container {
    color: rgb(2, 34, 12);
    font-weight: 500;
}

.mat-button.mat-success,
.mat-flat-button.mat-success {
  color: rgb(2, 34, 12);
  background: #44dcb6;
}

.mat-button.mat-accent,
.mat-flat-button.mat-accent {
  color: rgb(2, 34, 12);
  background: #48D444;
}

.mat-stroked-button.mat-primary,
.mat-flat-button.mat-primary {
  color: rgb(2, 34, 12);
}


// .mat-dialog-content {
//     background: rgb(247, 247, 247);
// }
// .mat-dialog-actions {
//     background: rgb(247, 247, 247);
// }

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
